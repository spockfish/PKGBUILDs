# $Id$
# Maintainer: Christian Hesse <mail@eworm.de>
# Contributor: Alexandre Boily <alexandreboily@gmail.com>
# Contributor: Illarion Kovalchuk <illarion.kovalchuk@gmail.com>
# Contributor: totoloco <totoloco at gmail _dot_com>
# Contributor: Ionut Biru <ibiru@archlinux.org>

# ALARM: Kevin Mihelich <kevin@archlinuxarm.org>
#  - use our cxxflags plus -fsigned-char
#  - keep build fix for i686 (fixes 32-bit ARM)

highmem=1
buildarch=28

pkgname=mysql-workbench
pkgver=6.3.10
pkgrel=7
_mysql_version=5.7.22
_connector_version=1.1.11
_gdal_version=2.3.0
_boost_version=1.59.0
pkgdesc='A cross-platform, visual database design tool developed by MySQL'
arch=('x86_64')
url='https://www.mysql.com/products/workbench/'
license=('GPL2')
depends=('cairo' 'ctemplate' 'desktop-file-utils' 'freetype2' 'gtkmm3'
	'hicolor-icon-theme' 'libgl' 'libgnome-keyring' 'libiodbc' 'libxml2'
	'libzip' 'mysql-python' 'pcre' 'python2' 'python2-cairo' 'python2-paramiko'
	'python2-pexpect' 'tinyxml' 'unixodbc' 'vsqlite++' 'json-c')
optdepends=('gnome-keyring: store SSH/MySQL passwords in GNOME password manager'
	'python2-pyodbc: database migration')
makedepends=('cmake' 'boost' 'mesa' 'swig' 'java-runtime' 'imagemagick')
validpgpkeys=('A4A9406876FCBD3C456770C88C718D3B5072E1F5')
source=("https://cdn.mysql.com/Downloads/MySQLGUITools/mysql-workbench-community-${pkgver}-src.tar.gz"{,.asc}
	"https://cdn.mysql.com/Downloads/MySQL-${_mysql_version%.*}/mysql-${_mysql_version}.tar.gz"{,.asc}
	"https://cdn.mysql.com/Downloads/Connector-C++/mysql-connector-c++-${_connector_version}.tar.gz"{,.asc}
	"http://download.osgeo.org/gdal/${_gdal_version}/gdal-${_gdal_version}.tar.xz"
	"https://downloads.sourceforge.net/project/boost/boost/${_boost_version}/boost_${_boost_version//./_}.tar.bz2"
	'http://www.antlr3.org/download/antlr-3.4-complete.jar'
	'0001-mysql-workbench-no-check-for-updates.patch'
	'0002-disable-unsupported-operating-system-warning.patch'
	'0003-add-option-to-hide-nonstandard-server-warning.patch'
	'0004-fix-build-for-i686.patch'
	'0005-gdal-use-CPLFree.patch'
	'0006-mysql-include-my_dir.patch'
	'0007-mysql-connector-cpp-linking.patch'
	'arch_linux_profile.xml')
sha512sums=('f892853a5f8b000c424b945c38680e17b041699fe2b03743b71c803de6cedeb12e3f69ad94d1c737e23f26d8608026e18fb29d31be6b3a2ffea1d78229212a4d'
            'SKIP'
            '91df104493edac6a7b7e76ab1c8d465a6a5cba7552d2d0e2e0f58e3943a5ccdbcad9964f30c81d5d734d0dc988ef07f90215e91639014e51c8fba773855123d7'
            'SKIP'
            'd6839ecda12d1f088f24b20c08f3e9a757e9907d3375dba39e0f247b6a11de59817739644201e74d782d4c900aa18bf60910fe60a9ee98a2c0138104fb55dc22'
            'SKIP'
            '7eb5abd9e61fca2ac8c7022029b2492b98f56873ffd277e15ced23d3742e26fd29eb5f8ed7c916b096c3caeed9efc03d0c022390fa0bf762d0c6cb5c04e70ec7'
            '8139e1ae997a86974071c5714ad3307e3d8fd15ef702b81a953410dd4d424b932135f53a0ef4891d9b9b747a38e539e66d6a803388fe0cc98e5166be872d682a'
            '04be4dfba3a21f3ab9d9e439a64958bd8e844a9f151b798383bd9e0dd6ebc416783ae7cb1d1dbb27fb7288ab9756b13b8338cdb8ceb41a10949c852ad45ab1f2'
            'efcccb010d6b0c66ac4f865f06e832d971e51dac9b1d8adb410ee4d01143966fe85b29e84dc77987ce845755ab10fb4a57f70bdb61bec44b8b0ae56b70aaac91'
            '8636b02470f228c8deefedc6775faf7b5cdf06bc048ed5c1bb310c49d57ed1ce24c2b223351fc19d83cfc6eecdf5672bc66672d3004307e34aacf83563fc4511'
            '3a53dce5ff62cb6b75e9329c511b7f234b37943891e102933fb6bbda207a3de2670d3093743eb4e8b58e045d3f38df1efaeb02f4e7f0a4d45eed090992ab866e'
            'bd98c213a91a36a816f083cb252bf5064dc17071db250c0f2d0822ac55a4ea8f096729cfe59cc8d56304f9bd476e874c38bb7273e8bbb967d50156b5e6f3371a'
            '08b921ce13ff38571fd4b25c4cd42d0248c78d57adeaa4e93d1add407ba1082118bec1a334e2628de269bc683b2d6614c7b90e78c746351d432c6d0880d9b5e6'
            'f6214df7412935d872409cc4d957854c75bf7c5b8dbc3160955a56619bcd5ceb252c30de086ab8b8cd0f7f28aff3825d0b71ab111cf4379ca01f5e2a307e0e0b'
            '1d9841b74be8d752426a8aa8283936f072c42c2bd93812c73fcd3e801026ccda5118257bdb2fce63d2878a8e59b4880daba77e07a41afee9e4dab7748d1e7ba0'
            '0bf585e76083091fc048f59981ac19ead99c8b168518b77d86b279b99cec4acfaf1331f15b85ccd3466590a82e1c66eca896065bcb8ad237be11cb999f28b6d8')

prepare() {
	cd "${srcdir}/mysql-${_mysql_version}"

	# fix build without server
	patch -Np1 < "${srcdir}"/0006-mysql-include-my_dir.patch

	cd "${srcdir}/mysql-connector-c++-${_connector_version}/"

	# fix linking
	patch -Np1 < "${srcdir}"/0007-mysql-connector-cpp-linking.patch

	cd "${srcdir}/mysql-workbench-community-${pkgver}-src/"

	# Disable 'Help' -> 'Check for Updates'
	# Updates are provided via Arch Linux packages
	patch -Np1 < "${srcdir}"/0001-mysql-workbench-no-check-for-updates.patch

	# disable unsupported operating system warning
	patch -Np1 < "${srcdir}"/0002-disable-unsupported-operating-system-warning.patch

	# add option to hide nonstandard server warning
	patch -Np1 < "${srcdir}"/0003-add-option-to-hide-nonstandard-server-warning.patch

	# fix build for i686
	patch -Np1 < "${srcdir}"/0004-fix-build-for-i686.patch

	# gdal: use CPLFree()
	patch -Np1 < "${srcdir}"/0005-gdal-use-CPLFree.patch

	# GCC 7.x introduced some new warnings, remove '-Werror' for the build to complete
	sed -i '/^set/s|-Werror -Wall|-Wall|' CMakeLists.txt

	# GCC 7.x complains about unsupported flag
	sed -i 's|-Wno-deprecated-register||' ext/scintilla/gtk/CMakeLists.txt

	# we need python 2.x
	sed -i '/^FIND_PROGRAM(PYTHON_EXEC /c FIND_PROGRAM(PYTHON_EXEC "python2")' \
		CMakeLists.txt

	# put antlr into place
	install -D ${srcdir}/antlr-3.4-complete.jar ${srcdir}/linux-res/bin/antlr-3.4-complete.jar

	# make sure to link against bundled libraries
	sed -i "/target_link_libraries/s|\\$|-L${srcdir}/install-bundle/usr/lib/ \\$|" backend/wbpublic/CMakeLists.txt
}

build() {
	# Build mysql
	cd "${srcdir}/mysql-${_mysql_version}"
	cmake . \
		-DWITHOUT_SERVER=ON \
		-DBUILD_CONFIG=mysql_release \
		-DCMAKE_INSTALL_PREFIX=/usr \
		-DCMAKE_INSTALL_LIBDIR=lib \
		-DSYSCONFDIR=/etc/mysql \
		-DMYSQL_DATADIR=/var/lib/mysql \
		-DWITH_BOOST="${srcdir}/boost_${_boost_version//./_}"
	make DESTDIR="${srcdir}/install-bundle/" install

	# Build mysql-connector-c++
	cd "${srcdir}/mysql-connector-c++-${_connector_version}/"
	cmake . \
		-Wno-dev \
		-DCMAKE_INSTALL_PREFIX=/usr \
		-DCMAKE_BUILD_TYPE=Release \
		-DCMAKE_INSTALL_LIBDIR=lib \
		-DMYSQLCPPCONN_BUILD_EXAMPLES=OFF \
		-DMYSQL_DIR="${srcdir}/install-bundle/" \
		-DMYSQL_CONFIG_EXECUTABLE="${srcdir}/install-bundle/usr/bin/mysql_config"
	make DESTDIR="${srcdir}/install-bundle/" install

	# Build gdal
	cd "${srcdir}/gdal-${_gdal_version}/"
	./configure \
		--prefix=/usr \
		--includedir=/usr/include/gdal \
		--with-sqlite3 \
		--with-mysql="${srcdir}/install-bundle/usr/bin/mysql_config" \
		--with-curl \
		--without-jasper
	make lib-target
	make DESTDIR="${srcdir}/install-bundle/" install-lib install-static-lib

	# Build MySQL Workbench itself with bundled libs
	cd "${srcdir}/mysql-workbench-community-${pkgver}-src/"
	cmake . \
		-DCMAKE_INSTALL_PREFIX:PATH=/usr \
		-DCMAKE_CXX_FLAGS="${CXXFLAGS} -std=c++11 -fsigned-char" \
		-DCMAKE_BUILD_TYPE=Release \
		-DMySQL_CONFIG_PATH="${srcdir}/install-bundle/usr/bin/mysql_config" \
		-DMySQLCppConn_LIBRARY="${srcdir}/install-bundle/usr/lib/libmysqlcppconn.so" \
		-DMySQLCppConn_INCLUDE_DIR="${srcdir}/install-bundle/usr/include" \
		-DGDAL_INCLUDE_DIR="${srcdir}/install-bundle/usr/include" \
		-DGDAL_LIBRARY="${srcdir}/install-bundle/usr/lib/libgdal.so" \
		-DUSE_BUNDLED_MYSQLDUMP=1
	make
}

package() {
	# install bundled libraries files and files
	for LIBRARY in $(find "${srcdir}/install-bundle/usr/lib/" -type f -regex '.*/lib\(gdal\|mysql\(client\|cppconn\)\)\.so\..*'); do
		install -D -m0755 "${LIBRARY}" "${pkgdir}"/usr/lib/mysql-workbench/"$(basename "${LIBRARY}")"
	done
	for SYMLINK in $(find "${srcdir}/install-bundle/usr/lib/" -type l -regex '.*/lib\(gdal\|mysql\(client\|cppconn\)\)\.so\..*'); do
		ln -s "$(readlink "${SYMLINK}")" "${pkgdir}"/usr/lib/mysql-workbench/"$(basename "${SYMLINK}")"
	done
	install -m0755 "${srcdir}/install-bundle/usr/bin/mysql"{,dump} "${pkgdir}"/usr/lib/mysql-workbench/

	# install MySQL Workbench itself
	cd "${srcdir}/mysql-workbench-community-${pkgver}-src/"

	make DESTDIR="${pkgdir}" install

	# icons
	for SIZE in 16 24 32 48 64 96 128; do
		convert -scale ${SIZE} \
			images/icons/linux/128x128/apps/mysql-workbench.png \
			${srcdir}/mysql-workbench.png
		install -D -m0644 ${srcdir}/mysql-workbench.png "${pkgdir}/usr/share/icons/hicolor/${SIZE}x${SIZE}/apps/mysql-workbench.png"
	done

	install -D -m 0644 "${srcdir}"/arch_linux_profile.xml \
		"${pkgdir}"/usr/share/mysql-workbench/mysql.profiles/Arch_Linux_\(MariaDB\).xml
}

