From dda2408df2d378873ec2e18c8f20074968d265cf Mon Sep 17 00:00:00 2001
From: Tom Anderson <thomasanderson@chromium.org>
Date: Wed, 16 May 2018 03:23:04 +0000
Subject: [PATCH] Ensure all targets build when target_arch="arm" and
 target_os="linux"

Also requires these third party changes:
https://chromium-review.googlesource.com/c/crashpad/crashpad/+/1060155
https://chromium-review.googlesource.com/c/native_client/src/native_client/+/1060158

BUG=843240
R=thakis
TBR=wfh

Change-Id: I9288967e238ab5319e1c963fffd58b9fe4be3692
Reviewed-on: https://chromium-review.googlesource.com/1060129
Commit-Queue: Thomas Anderson <thomasanderson@chromium.org>
Reviewed-by: Nico Weber <thakis@chromium.org>
Cr-Commit-Position: refs/heads/master@{#558953}
---
 chrome/installer/linux/rpm/build.sh                     | 1 +
 sandbox/win/src/crosscall_client.h                      | 3 ++-
 third_party/crashpad/crashpad/compat/linux/sys/ptrace.h | 2 +-
 3 files changed, 4 insertions(+), 2 deletions(-)

diff --git a/chrome/installer/linux/rpm/build.sh b/chrome/installer/linux/rpm/build.sh
index 261faeaf26f3..67faf75787c6 100755
--- a/chrome/installer/linux/rpm/build.sh
+++ b/chrome/installer/linux/rpm/build.sh
@@ -252,6 +252,7 @@ cd "${OUTPUTDIR}"
 case "$TARGETARCH" in
   arm )
     export ARCHITECTURE="armhf"
+    stage_install_rpm
     ;;
   ia32 )
     export ARCHITECTURE="i386"
diff --git a/sandbox/win/src/crosscall_client.h b/sandbox/win/src/crosscall_client.h
index c05e4978c0f1..7bcfb3cfd94e 100644
--- a/sandbox/win/src/crosscall_client.h
+++ b/sandbox/win/src/crosscall_client.h
@@ -8,6 +8,7 @@
 #include <stddef.h>
 #include <stdint.h>
 
+#include "base/compiler_specific.h"
 #include "sandbox/win/src/crosscall_params.h"
 #include "sandbox/win/src/sandbox.h"
 
@@ -150,7 +151,7 @@ class CopyHelper<const wchar_t*> {
   // We provide our not very optimized version of wcslen(), since we don't
   // want to risk having the linker use the version in the CRT since the CRT
   // might not be present when we do an early IPC call.
-  static size_t __cdecl StringLength(const wchar_t* wcs) {
+  static size_t CDECL StringLength(const wchar_t* wcs) {
     const wchar_t* eos = wcs;
     while (*eos++)
       ;
diff --git a/third_party/crashpad/crashpad/compat/linux/sys/ptrace.h b/third_party/crashpad/crashpad/compat/linux/sys/ptrace.h
index 73861576d61e..e5c95c7cc859 100644
--- a/third_party/crashpad/crashpad/compat/linux/sys/ptrace.h
+++ b/third_party/crashpad/crashpad/compat/linux/sys/ptrace.h
@@ -34,7 +34,7 @@ static constexpr __ptrace_request PTRACE_GET_THREAD_AREA =
 #endif  // !PTRACE_GET_THREAD_AREA && !PT_GET_THREAD_AREA && defined(__GLIBC__)
 
 // https://sourceware.org/bugzilla/show_bug.cgi?id=22433
-#if !defined(PTRACE_GETVFPREGS) && \
+#if !defined(PTRACE_GETVFPREGS) && !defined(PT_GETVFPREGS) && \
     defined(__GLIBC__) && (defined(__arm__) || defined(__arm64__))
 static constexpr __ptrace_request PTRACE_GETVFPREGS =
     static_cast<__ptrace_request>(27);
-- 
2.17.0

